---

- name: umount mountPath
  shell:
    umount -R
    {{ storage.mountPath }} || true

- block:
  - name: check for cryptdevice
    stat:
      path: '/dev/mapper/{{ storage.partitions.root.label.mapper }}'
    register: cryptdevice
  - name: close cryptdevice
    shell:
      cryptsetup
      luksClose
      {{ storage.partitions.root.label.mapper }}
    when: cryptdevice.stat.exists

- name: Remove all partitions from disk
  shell: sgdisk
    --zap-all
    /dev/{{ storage.device }}

- name: create biosBoot partition
  shell: sgdisk
    --set-alignment={{ item.layout.alignment }}
    --new={{ item.number }}:{{ item.layout.start }}:{{ item.layout.end }}
    --change-name=0:"{{ item.layout.label }}"
    --typecode=0:{{ item.type }}
    /dev/{{ storage.device }}
  with_items:
    - "{{ firmware.bios }}"
  when: not efiFirmware.stat.exists

- name: create EFI partition
  shell: sgdisk
    --set-alignment={{ item.layout.alignment }}
    --new={{ item.number }}:{{ item.layout.start }}:{{ item.layout.end }}
    --change-name=0:"{{ item.layout.label }}"
    --typecode=0:{{ item.type }}
    /dev/{{ storage.device }}
  with_items:
    - "{{ firmware.uefi }}"
  when: efiFirmware.stat.exists

- name: create partitions
  shell: sgdisk
    --set-alignment={{ item.encrypted.sector.alignment }}
    --new={{ item.number }}:{{ item.encrypted.sector.start }}:{{ item.encrypted.sector.end }}
    --change-name=0:"{{ item.encrypted.label }}"
    --typecode=0:{{ item.encrypted.type }}
    /dev/{{ storage.device }}
  with_items:
    - "{{ storage.partitions.boot }}"
    - "{{ storage.partitions.root }}"


- include_tasks: 11-encrypted-rootfs.yml
- include_tasks: 15-filesystem.yml

...
